<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Find-CommandFromCache</command:name>
      <command:verb>Find</command:verb>
      <command:noun>CommandFromCache</command:noun>
      <maml:description>
        <maml:para>Finds PowerShell commands with given name using local cache.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-CommandFromCache cmdlet finds PowerShell commands such as cmdlets using local cache. Local cache is obtained/updated with command `Update-PSRepositoryCache` (or using its alias `psaptgetupdate`). Searching local cache is about 20-100 times faster than online search performed via `Find-Command` command from PowerShellGet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Find-CommandFromCache</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
          <maml:name>CommandName</maml:name>
          <maml:Description>
            <maml:para>Specifies the names of one or more commands to search for. Only commands that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
        <maml:name>CommandName</maml:name>
        <maml:Description>
          <maml:para>Specifies the names of one or more commands to search for. Only commands that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Find-CommandFromCache 'Get-Folder' | Select -First 3

ModuleName                Name       Version         Repository
----------                ----       -------         ----------
VMware.VimAutomation.Core Get-Folder 11.0.0.10336080 PSGallery
WFTools                   Get-Folder 0.1.58          PSGallery
PSFolderSize              Get-Folder 1.6.3           PSGallery</dev:code>
        <dev:remarks>
          <maml:para>This command runs in about 20 milliseconds, which is about 100 times faster than standard Find-Command.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/Find-CommandFromCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Find-ModuleFromCache</command:name>
      <command:verb>Find</command:verb>
      <command:noun>ModuleFromCache</command:noun>
      <maml:description>
        <maml:para>Finds PowerShell modules with given name using local cache.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-ModuleFromCache cmdlet finds PowerShell modules with given name(s) using local cache. Local cache is obtained/updated with command `Update-PSRepositoryCache` (or using its alias `psaptgetupdate`). Searching local cache is about 20-100 times faster than online search performed via `Find-Module` command from PowerShellGet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Find-ModuleFromCache</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
          <maml:name>ModuleName</maml:name>
          <maml:Description>
            <maml:para>Specifies the names of one or more modules to search for. Only modules that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
        <maml:name>ModuleName</maml:name>
        <maml:Description>
          <maml:para>Specifies the names of one or more modules to search for. Only modules that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Find-ModuleFromCache FIFA2018,OutlookConnector | Select Name, Description

Name             Description
----             -----------
fifa2018         Module gives result (including live), fixtures, team standings and others for FIFA 2018 - Football ...
OutlookConnector The module Outlook Connector will enable you to connect to MS Outlook session on your computer via ...</dev:code>
        <dev:remarks>
          <maml:para>Returns information about modules from local cache. Search is not case sensitive.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/Find-ModuleFromCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Find-ScriptFromCache</command:name>
      <command:verb>Find</command:verb>
      <command:noun>ScriptFromCache</command:noun>
      <maml:description>
        <maml:para>Finds PowerShell scripts with given name using local cache.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-ScriptFromCache cmdlet finds PowerShell scripts with given name(s) using local cache. Local cache is obtained/updated with command `Update-PSRepositoryCache` (or using its alias `psaptgetupdate`). Searching local cache is about 20-100 times faster than online search performed via `Find-Script` command from PowerShellGet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Find-ScriptFromCache</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
          <maml:name>ScriptName</maml:name>
          <maml:Description>
            <maml:para>Specifies the names of one or more scripts to search for. Only scripts that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
        <maml:name>ScriptName</maml:name>
        <maml:Description>
          <maml:para>Specifies the names of one or more scripts to search for. Only scripts that exactly match the specified names are returned. If no matches are found, no error is returned.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Find-ScriptFromCache 'Get-FolderAge' | Select Name, Description

Name          Description
----          -----------
Get-FolderAge Get-FolderAge returns `LastModifiedDate` for a specified folder(s) and if folders were modified after ...</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/Find-ScriptFromCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-PSRepositoryCache</command:name>
      <command:verb>New</command:verb>
      <command:noun>PSRepositoryCache</command:noun>
      <maml:description>
        <maml:para>Cmdlet reads information from PS Repository and packs it.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Cmdlet New-PSRepositoryCache reads information about modules, scripts and commands from PS Repository. Afterwards, it is packing it for quick download by clients.</maml:para>
      <maml:para>Cmdlet is intended to be used on server-side of the system, but it can be used for testing purposes also on local machine. See parameters section for more info.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-PSRepositoryCache</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>ReadFromPath</maml:name>
          <maml:Description>
            <maml:para>By default, cmdlet reads live information from PS Repository. This operation can last for couple of minutes.</maml:para>
            <maml:para>For testing purposes, you can specify custom local path as string, where from cmdlet will read required information.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Local</maml:name>
          <maml:Description>
            <maml:para>By default, cmdlet uploads packed index file to a Storage Account. If this switch is specified, then it will leave data only on local filesystem.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Local</maml:name>
        <maml:Description>
          <maml:para>By default, cmdlet uploads packed index file to a Storage Account. If this switch is specified, then it will leave data only on local filesystem.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>ReadFromPath</maml:name>
        <maml:Description>
          <maml:para>By default, cmdlet reads live information from PS Repository. This operation can last for couple of minutes.</maml:para>
          <maml:para>For testing purposes, you can specify custom local path as string, where from cmdlet will read required information.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; New-PSRepositoryCache</dev:code>
        <dev:remarks>
          <maml:para>Command will read the information from online PS Repository and pack it in temporary location. Notice that reading information will run for a long time (about 5 minutes).</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/New-PSRepositoryCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Update-ModuleFromCache</command:name>
      <command:verb>Update</command:verb>
      <command:noun>ModuleFromCache</command:noun>
      <maml:description>
        <maml:para>Checks if there is newer version of specified modules from a local cache.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Update-ModuleFromCache cmdlet finds PowerShell modules with given name(s) which can be updated to newer version using local cache. If name is omitted, it will search for all locally installed modules. Local cache is obtained/updated with command `Update-PSRepositoryCache` (or using its alias `psaptgetupdate`). Searching local cache is about 20-100 times faster than online search performed via `Update-Module` command from PowerShellGet.</maml:para>
      <maml:para>As this module is just a proof-of-concept, actual update is not implemented. You need to run cmdlet with -Verbose or -WhatIf to see actual updatable modules.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Update-ModuleFromCache</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
          <maml:name>ModuleName</maml:name>
          <maml:Description>
            <maml:para>Specifies the names of one or more modules that should be checked for updates. If no module names are specified, Update-ModuleFromCache uses Get-Module -ListAvailable to obtain list of all modules. The only modules that are checked are those that exactly match specified names. If no matches are found for the specified modules or no newer version is found, no error occurs.</maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:Description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:Description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NamesOnly</maml:name>
          <maml:Description>
            <maml:para>{{Fill NamesOnly Description}}</maml:para>
          </maml:Description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Name">
        <maml:name>ModuleName</maml:name>
        <maml:Description>
          <maml:para>Specifies the names of one or more modules that should be checked for updates. If no module names are specified, Update-ModuleFromCache uses Get-Module -ListAvailable to obtain list of all modules. The only modules that are checked are those that exactly match specified names. If no matches are found for the specified modules or no newer version is found, no error occurs.</maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:Description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:Description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NamesOnly</maml:name>
        <maml:Description>
          <maml:para>{{Fill NamesOnly Description}}</maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Update-ModuleFromCache AzureRM -WhatIf</dev:code>
        <dev:remarks>
          <maml:para>It will check if there is newer version of AzureRM module available using local cache.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt; $Names = (Get-Module AzureRM.* -ListAvailable).Name | Select -unique; Update-ModuleFromCache $Names -WhatIf</dev:code>
        <dev:remarks>
          <maml:para>It will check for all AzureRM modules if they can be updated or not While standard command Update-Module will run for minutes, this command will run for seconds.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Update-ModuleFromCache -WhatIf</dev:code>
        <dev:remarks>
          <maml:para>It will check for all locally installed modules if they can be updated or not. While standard command Update-Module will run for minutes, this command will run for seconds.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/Update-ModuleFromCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Update-PSRepositoryCache</command:name>
      <command:verb>Update</command:verb>
      <command:noun>PSRepositoryCache</command:noun>
      <maml:description>
        <maml:para>Updates local PS repository cache. Main command in module.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Updates local PS repository cache by downloading and extracting information about modules, commands and scripts. If cache is not present, it will create one.</maml:para>
      <maml:para>This is main command in module psaptgetupdate. Command have alias named the same as module, psaptgetupdate. Command functionality is based on Linux command apt-get update.</maml:para>
      <maml:para>Command is executed automatically when module is imported. Command execution lasts only a few seconds. It has no custom parameters, but it supports common parameters (like -Verbose).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Update-PSRepositoryCache</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; psaptgetupdate</dev:code>
        <dev:remarks>
          <maml:para>Downloads zipped index file and extract it to application data location.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/iricigor/psaptgetupdate/blob/master/Docs/Update-PSRepositoryCache.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>